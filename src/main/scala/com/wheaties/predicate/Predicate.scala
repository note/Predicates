package com.wheaties.predicate

//TODO: Add in hashCode, equals, toString, ## so that these classes are transparent
package object predicate{
  type Predicate[A] = Predicate1[A]
  //type Not[A] = Not1[A]

  def not(value: Boolean) = !value
  implicit def sugarIs[A](value: A) = new{ def is(pred: Predicate[A]) = pred(value) }

  implicit def convert1[A](func: Function[A, Boolean]) = new Predicate1[A]{ def apply(x: A) = func.apply(x) }
  implicit def convert2[A,B](func: Function2[A,B, Boolean]) = new Predicate2[A,B]{ def apply(arg0: A, arg1: B) = func.apply(arg0,arg1) }
  implicit def convert3[A,B,C](func: Function3[A,B,C, Boolean]) = new Predicate3[A,B,C]{ def apply(arg0: A, arg1: B, arg2: C) = func.apply(arg0,arg1,arg2) }
  implicit def convert4[A,B,C,D](func: Function4[A,B,C,D, Boolean]) = new Predicate4[A,B,C,D]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D) = func.apply(arg0,arg1,arg2,arg3) }
  implicit def convert5[A,B,C,D,E](func: Function5[A,B,C,D,E, Boolean]) = new Predicate5[A,B,C,D,E]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E) = func.apply(arg0,arg1,arg2,arg3,arg4) }
  implicit def convert6[A,B,C,D,E,F](func: Function6[A,B,C,D,E,F, Boolean]) = new Predicate6[A,B,C,D,E,F]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5) }
  implicit def convert7[A,B,C,D,E,F,G](func: Function7[A,B,C,D,E,F,G, Boolean]) = new Predicate7[A,B,C,D,E,F,G]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6) }
  implicit def convert8[A,B,C,D,E,F,G,H](func: Function8[A,B,C,D,E,F,G,H, Boolean]) = new Predicate8[A,B,C,D,E,F,G,H]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7) }
  implicit def convert9[A,B,C,D,E,F,G,H,I](func: Function9[A,B,C,D,E,F,G,H,I, Boolean]) = new Predicate9[A,B,C,D,E,F,G,H,I]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8) }
  implicit def convert10[A,B,C,D,E,F,G,H,I,J](func: Function10[A,B,C,D,E,F,G,H,I,J, Boolean]) = new Predicate10[A,B,C,D,E,F,G,H,I,J]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9) }
  implicit def convert11[A,B,C,D,E,F,G,H,I,J,K](func: Function11[A,B,C,D,E,F,G,H,I,J,K, Boolean]) = new Predicate11[A,B,C,D,E,F,G,H,I,J,K]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10) }
  implicit def convert12[A,B,C,D,E,F,G,H,I,J,K,L](func: Function12[A,B,C,D,E,F,G,H,I,J,K,L, Boolean]) = new Predicate12[A,B,C,D,E,F,G,H,I,J,K,L]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11) }
  implicit def convert13[A,B,C,D,E,F,G,H,I,J,K,L,M](func: Function13[A,B,C,D,E,F,G,H,I,J,K,L,M, Boolean]) = new Predicate13[A,B,C,D,E,F,G,H,I,J,K,L,M]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12) }
  implicit def convert14[A,B,C,D,E,F,G,H,I,J,K,L,M,N](func: Function14[A,B,C,D,E,F,G,H,I,J,K,L,M,N, Boolean]) = new Predicate14[A,B,C,D,E,F,G,H,I,J,K,L,M,N]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13) }
  implicit def convert15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O](func: Function15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O, Boolean]) = new Predicate15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14) }
  implicit def convert16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P](func: Function16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P, Boolean]) = new Predicate16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15) }
  implicit def convert17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q](func: Function17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q, Boolean]) = new Predicate17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16) }
  implicit def convert18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R](func: Function18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R, Boolean]) = new Predicate18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q, arg17: R) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17) }
  implicit def convert19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S](func: Function19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S, Boolean]) = new Predicate19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q, arg17: R, arg18: S) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18) }
  implicit def convert20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T](func: Function20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T, Boolean]) = new Predicate20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q, arg17: R, arg18: S, arg19: T) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19) }
  implicit def convert21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U](func: Function21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U, Boolean]) = new Predicate21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q, arg17: R, arg18: S, arg19: T, arg20: U) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20) }
  implicit def convert22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V](func: Function22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V, Boolean]) = new Predicate22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V]{ def apply(arg0: A, arg1: B, arg2: C, arg3: D, arg4: E, arg5: F, arg6: G, arg7: H, arg8: I, arg9: J, arg10: K, arg11: L, arg12: M, arg13: N, arg14: O, arg15: P, arg16: Q, arg17: R, arg18: S, arg19: T, arg20: U, arg21: V) = func.apply(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21) }
}